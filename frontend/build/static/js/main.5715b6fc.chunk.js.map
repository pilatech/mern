{"version":3,"sources":["mainButton.png","routes/Home.js","components/imagePreview.js","components/Camera.js","routes/TakeShot.js","components/Form/TextError.js","components/Form/Input.js","components/Form/RadioButtons.js","components/Form/Select.js","components/Form/TextArea.js","components/Form/CheckboxGroup.js","components/Form/DatePicker.js","components/Form/FormikControl.js","components/Form/index.js","context/ClientData.js","App.js","index.js"],"names":["Home","className","src","mainButtonImage","alt","to","ImagePreview","showCamera","onClick","CameraContainer","useState","image","setImage","imageAvailable","setIsImageAvailable","useEffect","cameraOrImage","onTakePhoto","dataUri","handleTakePhoto","onCameraError","error","console","log","handleCameraError","idealFacingMode","FACING_MODES","ENVIRONMENT","idealResolution","width","height","imageType","IMAGE_TYPES","JPG","imageCompression","isMaxResolution","isSilentMode","isDisplayStartCameraError","isFullscreen","TakeShot","props","Camera","TextError","children","Input","label","name","rest","htmlFor","id","component","RadioButtons","options","field","map","option","Fragment","type","value","checked","key","Select","as","TextArea","CheckboxGroup","includes","DatePicker","form","setFieldValue","selected","onChange","val","FormikControl","control","FormikContainer","genderOptions","validationSchema","Yup","firstName","required","lastName","sex","birthDate","nullable","email","phoneNumber","typeError","address","initialValues","onSubmit","values","axios","post","then","response","catch","status","formik","Context","createContext","ClientData","formValues","setFormValues","Provider","prev","App","path","element","Form","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5715b6fc.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/mainButton.b1342cfa.png\";","import mainButtonImage from '../mainButton.png'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction Home() {\r\n    return (\r\n      <div className=\"home\">\r\n        <h1><img src={mainButtonImage} className=\"logo\" alt=\"main-logo\" /></h1>\r\n        <p className=\"intro-text\">Welcome to Ezulu. Ezulu lets you send your prescription hustle free. We will need the picture of your prescription and your details. Let's start!</p>\r\n        <Link to=\"/take-shot\" className=\"btn btn-main\">\r\n          Start here\r\n        </Link>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  export default Home;","import { Link } from 'react-router-dom'\r\n// import { useContext } from 'react'\r\n// import { Context } from '../context/ClientData'\r\nfunction ImagePreview({ src, showCamera }) {\r\n    // const [ updateClientData ] = useContext(Context)\r\n    // updateClientData({image: src})\r\n    return (\r\n     <div className=\"image-preview\">\r\n         <img src={src} alt=\"preview of the prescription shot\" className=\"gamePreviewImage\"/>\r\n         <button className=\"btn btn-retake\" onClick={showCamera}>Retake</button>\r\n         <Link to=\"/register\" className=\"btn btn-proceed\">Proceed</Link>\r\n     </div>\r\n    );\r\n  }\r\n  \r\n  export default ImagePreview;","import React from 'react';\r\nimport { useState, useEffect } from 'react'\r\nimport Camera, { FACING_MODES, IMAGE_TYPES } \r\nfrom 'react-html5-camera-photo';\r\nimport 'react-html5-camera-photo/build/css/index.css';\r\nimport ImagePreview from './imagePreview'\r\n\r\nfunction CameraContainer () {\r\n\r\n  const [ image, setImage ] = useState('')\r\n  const [ imageAvailable, setIsImageAvailable ] = useState(false)\r\n\r\n  useEffect(() => {\r\n\r\n  }, [image])\r\n\r\n  function showCamera(){\r\n    setImage('')\r\n    setIsImageAvailable('')\r\n  }\r\n\r\n  function handleTakePhoto (dataUri) {\r\n    // Do stuff with the photo...\r\n    setImage(dataUri)\r\n    setIsImageAvailable(true)\r\n  }\r\n\r\n  function handleCameraError (error) {\r\n    console.log('handleCameraError', error);\r\n  }\r\n\r\n  const cameraOrImage = imageAvailable ?\r\n    ( <ImagePreview showCamera={showCamera} src={image}/> ) :\r\n    ( \r\n      <>\r\n        <h2>Take a shot of your prescription</h2>\r\n        <Camera\r\n        onTakePhoto = { (dataUri) => { handleTakePhoto(dataUri); } }\r\n        onCameraError = { (error) => { handleCameraError(error); } }\r\n        idealFacingMode = {FACING_MODES.ENVIRONMENT}\r\n        idealResolution = {{width: 412, height: 732}} //width: 480, height: 640\r\n        imageType = {IMAGE_TYPES.JPG}\r\n        imageCompression = {0.97}\r\n        isMaxResolution = {true}\r\n        isSilentMode = {true}\r\n        isDisplayStartCameraError = {true}\r\n        isFullscreen = {false}\r\n      /> \r\n      </>\r\n    )\r\n\r\n\r\n  return (\r\n    <>\r\n      {cameraOrImage}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CameraContainer;","import Camera from '../components/Camera'\r\n\r\nfunction TakeShot(props) {\r\n  console.log(props)\r\n    return (\r\n      <div>\r\n        <Camera/>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  export default TakeShot;","import React from 'react'\r\n\r\nfunction TextError (props) {\r\n  return <div className='error'>{props.children}</div>\r\n}\r\n\r\nexport default TextError","import React from 'react'\r\nimport { Field, ErrorMessage } from 'formik'\r\nimport TextError from './TextError'\r\n\r\n function Input(props) {\r\n     const { label, name, ...rest } = props\r\n    return (\r\n        <div className=\"form-control\">\r\n            <label htmlFor={name}>{label}</label>\r\n            <Field id={name} name={name} {...rest}/>\r\n            <ErrorMessage name={name} component={TextError}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input\r\n","import React from 'react'\r\nimport { Field, ErrorMessage } from 'formik'\r\nimport TextError from './TextError'\r\n\r\nfunction RadioButtons(props) {\r\n    const { label, name, options, ...rest } = props\r\n    return (\r\n        <div className=\"form-control\">\r\n            <label>{label}</label>\r\n            <Field name={name} {...rest}>\r\n                {\r\n                  ({ field } ) => (\r\n                    options.map(option => {\r\n                        return (\r\n                            <React.Fragment key={option.key}>\r\n                                <input\r\n                                    type=\"radio\"\r\n                                    id={option.value}\r\n                                    {...field}\r\n                                    value={option.value}\r\n                                    checked={field.value === option.value}\r\n                                />\r\n                                <label htmlFor={option.value}>{option.key}</label>\r\n                            </React.Fragment>\r\n                        )\r\n                    })\r\n                  ) \r\n                }\r\n            </Field>\r\n            <ErrorMessage name={name} component={TextError}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RadioButtons\r\n","import React from 'react'\r\nimport { Field, ErrorMessage } from 'formik'\r\nimport TextError from './TextError'\r\n\r\nfunction Select(props) {\r\n    const { label, name, options, ...rest } = props\r\n    return (\r\n        <div className=\"form-control\">\r\n            <label htmlFor={name}>{label}</label>\r\n            <Field as=\"select\" id={name} name={name} {...rest}>\r\n                {options.map(option => (\r\n                    <option key={option.value} value={option.value}>{option.key}</option>\r\n                ))}\r\n            </Field>  \r\n            <ErrorMessage name={name} component={TextError}/>  \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Select\r\n","import React from 'react'\r\nimport TextError from './TextError'\r\nimport { Field, ErrorMessage } from 'formik'\r\n\r\nfunction TextArea(props) {\r\n    const { label, name, ...rest } = props\r\n    return (\r\n        <div className=\"form-control\">\r\n            <label htmlFor={name}>{label}</label>\r\n            <Field as=\"textarea\" id={name} name={name} {...rest}/>  \r\n            <ErrorMessage name={name} component={TextError}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TextArea","import React from 'react'\r\nimport { Field, ErrorMessage } from 'formik'\r\nimport TextError from './TextError'\r\n\r\nfunction CheckboxGroup(props) {\r\n    const { label, name, options, ...rest } = props\r\n    return (\r\n        <div className=\"form-control\">\r\n            <label>{label}</label>\r\n            <Field name={name} {...rest}>\r\n                {\r\n                  ({ field } ) => (\r\n                    options.map(option => {\r\n                        return (\r\n                            <React.Fragment key={option.key}>\r\n                                <input\r\n                                    type=\"checkbox\"\r\n                                    id={option.value}\r\n                                    {...field}\r\n                                    value={option.value}\r\n                                    checked={field.value.includes(option.value)}\r\n                                />\r\n                                <label htmlFor={option.value}>{option.key}</label>\r\n                            </React.Fragment>\r\n                        )\r\n                    })\r\n                  ) \r\n                }\r\n            </Field>\r\n            <ErrorMessage name={name} component={TextError}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CheckboxGroup\r\n","import React from 'react'\r\nimport { Field, ErrorMessage } from 'formik' \r\nimport TextError from './TextError'\r\nimport DateView from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\"\r\n\r\nfunction DatePicker(props) {\r\n    const { label, name, ...rest } = props\r\n    return (\r\n        <div className=\"form-control\">\r\n            <label htmlFor={name}>{label}</label>\r\n            <Field name={name}>\r\n                {\r\n                    ({form, field }) => {\r\n                        const { setFieldValue } = form\r\n                        const { value } = field\r\n                        return <DateView\r\n                            id={name}\r\n                            {...field}\r\n                            {...rest}\r\n                            selected={value}\r\n                            onChange={val => setFieldValue(name, val)}\r\n                        />\r\n                    }\r\n                }\r\n            </Field>\r\n            <ErrorMessage name={name} component={TextError}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DatePicker\r\n","import React from 'react'\r\nimport Input from './Input'\r\nimport RadioButtons from './RadioButtons'\r\nimport Select from './Select'\r\nimport TextArea from './TextArea'\r\nimport CheckboxGroup from './CheckboxGroup'\r\nimport DatePicker from './DatePicker'\r\n\r\nfunction FormikControl(props) {\r\n    const { control, ...rest } = props\r\n    switch(control){\r\n        case 'input':\r\n            return <Input {...rest}/>\r\n        case 'textarea':\r\n            return <TextArea {...rest} />\r\n        case 'select':\r\n            return <Select {...rest}/>\r\n        case 'radio':\r\n            return <RadioButtons {...rest}/>\r\n        case 'checkbox':\r\n            return <CheckboxGroup {...rest}/>\r\n        case 'date':\r\n            return <DatePicker {...rest}/>\r\n        default: return null\r\n    }\r\n}\r\n\r\n\r\nexport default FormikControl\r\n\r\n","\r\nimport React from 'react'\r\nimport { Formik, Form } from 'formik'\r\nimport * as Yup from 'yup'\r\nimport FormikControl from './FormikControl'\r\nimport axios from 'axios'\r\n\r\nfunction FormikContainer() {\r\n   const genderOptions = [\r\n        { key: 'Male', value: 'male' },\r\n        { key: 'Female', value: 'female' }\r\n    ]\r\n\r\n    const initialValues = {\r\n        firstName: '',\r\n        lastName: '',\r\n        sex: '',\r\n        birthDate: null,\r\n        email: '',\r\n        phoneNumber: null,\r\n        address: ''\r\n    }\r\n    const validationSchema = Yup.object({\r\n        firstName: Yup.string().required('Name cannot be empty'),\r\n        lastName: Yup.string().required('Last Name cannot be empty'),\r\n        sex: Yup.string().required('You must choose your gender'),\r\n        birthDate:Yup.date().required('Date of birth is required').nullable(),\r\n        email: Yup.string().required('Email is required').email('Enter a valid Email address'),\r\n        phoneNumber: Yup.number().typeError('Enter a valid phone number').required('Phone Number cannot be empty').nullable(),\r\n        address: Yup.string().required('Address cannot be empty')\r\n    })\r\n    const onSubmit = values => {\r\n        console.log(values)\r\n        axios.post('http://localhost/register', {\r\n            ...values\r\n          })\r\n          .then(function (response) {\r\n            console.log(response);\r\n          })\r\n          .catch(function (error) {\r\n            console.log(error.status)\r\n          });\r\n    }\r\n    return (\r\n        <>\r\n        <h2>Fill in your details</h2>\r\n            <Formik \r\n            initialValues={initialValues}\r\n            validationSchema={validationSchema}\r\n            onSubmit={onSubmit}\r\n            >\r\n                {\r\n                    formik => <Form>\r\n                        <FormikControl\r\n                            control=\"input\"\r\n                            label=\"First Name\"\r\n                            name=\"firstName\"\r\n                        />\r\n                         <FormikControl\r\n                            control=\"input\"\r\n                            label=\"Last Name\"\r\n                            name=\"lastName\"\r\n                        />\r\n                        <FormikControl\r\n                            control=\"radio\"\r\n                            label=\"Sex\"\r\n                            name=\"sex\"\r\n                            options={genderOptions}\r\n                        />\r\n                        <FormikControl\r\n                            control=\"date\"\r\n                            label=\"Date of Birth\"\r\n                            name=\"birthDate\"\r\n                        />\r\n                        <FormikControl \r\n                            control='input' \r\n                            type='email' \r\n                            label='Email' \r\n                            name='email' \r\n                        />\r\n                        <FormikControl\r\n                            control=\"input\"\r\n                            label=\"Phone Number\"\r\n                            name=\"phoneNumber\"\r\n                        />\r\n                        <FormikControl \r\n                            control='textarea'  \r\n                            label='Address' \r\n                            name='address'/>\r\n                        <button \r\n                        className=\"btn btn-submit\"\r\n                        type=\"submit\">Submit</button>\r\n                    </Form>\r\n                }\r\n            </Formik>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FormikContainer\r\n","import React from 'react'\r\nimport { useState } from 'react'\r\nimport { createContext } from 'react'\r\n\r\nconst Context = createContext({})\r\n\r\nexport default function ClientData(props) {\r\n\r\n    const [formValues, setFormValues] = useState({})\r\n    function updateFormData(values){\r\n      setFormValues(prev => ({...prev, ...values}))\r\n    }\r\n\r\n    return (\r\n          <Context.Provider value={[updateFormData, {...formValues}]}>\r\n              {props.children}\r\n          </Context.Provider>\r\n    )\r\n}\r\n\r\nexport { Context }\r\n\r\n\r\n","import { Route, Routes } from 'react-router-dom'\r\nimport './App.css';\r\nimport Home from './routes/Home'\r\nimport TakeShot from './routes/TakeShot'\r\nimport Form from './components/Form/'\r\nimport Provider from './context/ClientData'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      {/* context to bundle the image and other form data together for submiting */}\r\n      <Provider>\r\n      <Routes>\r\n        <Route path=\"/\" element={<Home/>}/>\r\n        <Route path=\"/take-shot\" element={<TakeShot />}/>\r\n        <Route path=\"/register\" element={<Form />}/>\r\n      </Routes>\r\n      </Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <Router>\n        <App />\n    </Router>\n    , document.getElementById('root')\n);\n\n"],"sourceRoot":""}